[gcode_macro CG28]
gcode:
	{% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}

[gcode_macro HEATSOAK]
gcode:
    status_heating
    M117 Heat Soaking...
	M104 S150 ; set hotend to 150 and don't wait
	M140 S115 ; set bed to 115 and don't wait
    SET_FAN_SPEED FAN=Nevermore SPEED=1
	CG28 ; conditional home
	G90 ; absolute positioning
	G1 X350 Y350 F6800 ; Move to bucket

[gcode_macro FILAMENT_UNLOAD]
gcode:
	M83                    # set extruder to relative extrusion
	G90                    # set toolhead to absolute position
	G1 Z80 F100000         
	G1 X175 Y50 F100000    # move up and to front/center to straighten filament path
	G1 E3  F300            # extrude slowly to soften tip of filament
	G1 E-30 F100000        # quickly yank filament back clear of hotend
	G1 E-80 F1800          # ensure filament is clear of extruder gears
	M82                    # set extruder to absolute extrusion

[gcode_macro FILAMENT_LOAD]
gcode:
    M83                    # set extruder to relative extrusion
    G90                    # set toolhead to absolute position
    G1 Z80 F100000
    G1 X175 Y50 F100000    # move up and to front/center to straighten filament path
    G1 E75 F300            # extrude filament through into hotend
    G1 E30 F240            # slowly extrude through hotend to partially purge previous filament
    M82                    # set extruder to absolute extrusion

[delayed_gcode filter_off]
gcode:
    SET_FAN_SPEED FAN=Nevermore SPEED=0

[gcode_macro TOGGLE_NEVERMORE]
gcode:
    {% if printer['fan_generic Nevermore'].speed > 0 %}
      SET_FAN_SPEED FAN=Nevermore SPEED=0
    {% else %}
      SET_FAN_SPEED FAN=Nevermore SPEED=1
    {% endif %}

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 302
variable_start_y: 350
variable_start_z: 0.0
variable_wipe_dist: -35
variable_wipe_qty: 10
variable_wipe_spd: 200
variable_raise_distance: 50

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
 G90                                            ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}
 G1 X232

[gcode_macro CALIBRATE_Z]
rename_existing: BASE_CALIBRATE_Z
gcode:
    {% set bed_position = params.BED_POSITION|default('None') %}
    CG28
    M117 Z-Calibration..
    ATTACH_PROBE                # a macro for fetching the probe first
    {% if bed_position != 'None' %}
      BASE_CALIBRATE_Z BED_POSITION={bed_position}
    {% else %}
      BASE_CALIBRATE_Z
    {% endif %}
    DOCK_PROBE                # and parking it afterwards (or DOCK_PROBE in klicky macros)
    M117

[gcode_macro G32]
gcode:
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G28                            ; home all axes
    {% set BED = params.BED|int %} ; Get bed temp from gcode
    {% set EXTRUDER = params.EXTRUDER|int %} ; Get nozzle temp from gcode
    ##SET_FAN_SPEED FAN=Nevermore SPEED=1 // Add this back once filter is added
    M190 S{BED} # wait for bed temperature
    M109 S{EXTRUDER} # wait for extruder temperature
    QUAD_GANTRY_LEVEL
    BED_MESH_CALIBRATE
    CLEAN_NOZZLE
    CALIBRATE_Z

    ##G32                            ; home all axes
    G1 Z20 F3000                   ; move nozzle away from bed
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

    UPDATE_DELAYED_GCODE ID=filter_off DURATION=360